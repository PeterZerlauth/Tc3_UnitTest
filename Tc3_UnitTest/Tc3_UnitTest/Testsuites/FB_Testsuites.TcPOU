<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Testsuites" Id="{f57812b9-99c8-4f64-b54a-807a33ca5cc6}" SpecialFunc="None">
    <Declaration><![CDATA[ FUNCTION_BLOCK PUBLIC FB_Testsuites EXTENDS FB_Base IMPLEMENTS I_Testsuites
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR	
	stOptions:			ST_TestsuitesOptions;
	stTestsuites:    	ST_Testsuites;
	nIndex: 			DINT;
	fbTimeout:			TON:= (PT:= T#300S);
	fbFile:				FB_File;
	fbBuilder:			FB_StringBuilder;
	fbList:				FB_ListSTRING;
	fbListTestsuite:	FB_ListObject;
	fbProperty:			FB_Property;
	fbLogger:			FB_TcLogger;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// https://peterzerlauth.com/
SUPER^();]]></ST>
    </Implementation>
    <Method Name="M_Add" Id="{341dc9d1-6013-01b3-2ca0-fe24c585f169}">
      <Declaration><![CDATA[METHOD PUBLIC M_Add : BOOL
VAR_INPUT
	Testsuite:		I_Testsuite;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbListTestsuite.M_Add(Testsuite);
Testsuite.P_Parent:= THIS^;
Testsuite.P_Logger:= fbLogger;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Execute" Id="{9f9f5ca1-441c-0f29-0c6d-16c04b2958a4}">
      <Declaration><![CDATA[METHOD PROTECTED M_Execute : BOOL
VAR_INPUT
END_VAR
VAR
	iTestsuite:		I_Testsuite;
	nIndex: 		DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Execute:= TRUE;
fbTimeout(IN:= TRUE);
WHILE nIndex < fbListTestsuite.P_Length DO
	IF __QUERYINTERFACE(fbListTestsuite.M_Get(nIndex), iTestsuite) THEN
		M_Execute:= M_Execute AND (iTestsuite.P_State = E_Base.Stopped);
	END_IF
	nIndex:= nIndex + 1;
END_WHILE
IF M_Execute THEN
	stTestsuites.fTime:= TIME_TO_LREAL(fbTimeout.ET) / 1000.0;
	fbTimeout(IN:= FALSE);
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Starting" Id="{a8b1fe70-9112-024f-0be9-355ea21512f0}">
      <Declaration><![CDATA[METHOD PROTECTED M_Starting : BOOL
VAR_INPUT
END_VAR

VAR
	iTestsuite:		I_Testsuite;
	nIndex: DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE nState OF
	0:
		IF 	SUPER^.M_Starting() THEN
			fbList.M_Clear();
			fbProperty.M_Reset();
			stTestsuites.sName:= F_GetName(sInstancePath);
			stTestsuites.nTests:= 0;
			stTestsuites.nFailures:= 0;
			stTestsuites.nErrors:= 0;
			stTestsuites.nSkipped:= 0;
			stTestsuites.nAssertions:= 0;
			stTestsuites.fTime:= 0.0;
			stTestsuites.sTimestamp:= SYSTEMTIME_TO_ISO8601(fbGetTime.TIMESTR, 0, FALSE, 3);
			stTestsuites.sTimestamp:= LEFT(stTestsuites.sTimestamp, LEN(stTestsuites.sTimestamp) - 6);
			nState:= 1;
		END_IF
	
	1:
		WHILE nIndex < fbListTestsuite.P_Length DO
			IF __QUERYINTERFACE(fbListTestsuite.M_Get(nIndex), iTestsuite) THEN
				iTestsuite.M_Request(E_Base.Execute);
			END_IF
			nIndex:= nIndex + 1;
		END_WHILE
		nState:= 2;
		
	2:
		M_Starting:= TRUE;
		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Stopping" Id="{188bbc9a-c2f6-0b60-00aa-0b55afe47559}">
      <Declaration><![CDATA[METHOD PROTECTED M_Stopping : BOOL
VAR_INPUT
END_VAR
VAR
	sValue: STRING(255);
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE nState OF
	0:
		//<testsuites name="Test run" tests="8" failures="1" errors="1" skipped="1"  assertions="20" time="16.082687" timestamp="2021-04-02T15:48:23">
		fbList.M_Insert(0, '<?xml version="1.0" encoding="UTF-8"?>');
		fbBuilder.M_Reset();
		fbBuilder.M_Append('<testsuites name="');	
		fbBuilder.M_Append(stTestsuites.sName);		
		fbBuilder.M_Append('" tests="');	
		fbBuilder.M_AppendINT(stTestsuites.nTests);
		fbBuilder.M_Append('" failures="');	
		fbBuilder.M_AppendINT(stTestsuites.nFailures);
		fbBuilder.M_Append('" errors="');	
		fbBuilder.M_AppendINT(stTestsuites.nErrors);
		fbBuilder.M_Append('" skipped="');	
		fbBuilder.M_AppendINT(stTestsuites.nSkipped);
		fbBuilder.M_Append('" assertions="');	
		fbBuilder.M_AppendINT(stTestsuites.nAssertions);
		fbBuilder.M_Append('" time="');	
		fbBuilder.M_AppendREAL(stTestsuites.fTime, 3);
		fbBuilder.M_Append('" timestamp="');
		fbBuilder.M_Append(stTestsuites.sTimestamp);
		fbBuilder.M_Append('">');
		fbBuilder.M_ToAny(sValue);
		fbList.M_Insert(1, sValue);
		fbList.M_Add('</testsuites>');
		nState:= 1;
	1:	
		// add Properties
		IF fbProperty.P_List.P_Length > 0 THEN
			fbList.M_Insert(2, '$T<properties>');
			nIndex:= 0;
			WHILE nIndex < fbProperty.P_List.P_Length DO
				fbList.M_Insert(3 + nIndex, Concat('$T$T', fbProperty.P_List.M_Item(nIndex)));
				nIndex:= nIndex + 1;
			END_WHILE
			fbList.M_Insert(3 + nIndex, '$T</properties>');
		END_IF
		nState:= 2;
		
	2:
		fbBuilder.M_Reset();
		fbBuilder.M_Append(stTestsuites.sName);		
		fbBuilder.M_Append(': tests= ');
		fbBuilder.M_AppendINT(stTestsuites.nTests);
		fbBuilder.M_Append(' failures= ');	
		fbBuilder.M_AppendINT(stTestsuites.nFailures);
		fbBuilder.M_Append(' errors= ');	
		fbBuilder.M_AppendINT(stTestsuites.nErrors);
		fbBuilder.M_Append(' skipped= ');	
		fbBuilder.M_AppendINT(stTestsuites.nSkipped);
		fbBuilder.M_Append(' assertions= ');
		fbBuilder.M_AppendINT(stTestsuites.nAssertions);
		fbBuilder.M_ToAny(sValue);
		IF stTestsuites.nFailures <> 0 OR_ELSE stTestsuites.nErrors <> 0 THEN
			fbLogger.M_Error(sValue);
		ELSIF stTestsuites.nSkipped <> 0 THEN
			fbLogger.M_Warning(sValue);
		ELSE
			fbLogger.M_Info(sValue);
		END_IF
		nState:= 3;
			
	3:
		IF fbFile.M_Delete(stOptions.sFilePathName) THEN
			nState:= 4;
		END_IF	
	
	4:
		IF fbFile.M_Create(stOptions.sFilePathName) THEN
			nState:= 5;
			nIndex:= 0;
		END_IF
	
	5:
			IF fbFile.M_AppendLine(fbList.M_Item(nIndex)) THEN
				IF nIndex > fbList.P_Length THEN
					nState:= 6;
				END_IF
				nIndex:= nIndex +1;
			END_IF	
	6:
		M_Stopping:= fbFile.M_Close();	
		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Property Name="P_Data" Id="{185d0565-b6b7-0d45-1303-8b4f2b4c3186}">
      <Declaration><![CDATA[{attribute 'suppress_wrn_C0410'}
PROPERTY PUBLIC P_Data : reference to ST_Testsuites]]></Declaration>
      <Get Name="Get" Id="{b4d22e3a-4d8e-0c3f-0f30-74401271467a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Data ref= stTestsuites;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{16b7aa7a-3f6b-0f81-16e0-f7d078d1f7c5}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Data ref= stTestsuites;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="P_List" Id="{18052295-5436-0cc4-08da-cc28d1b6063a}">
      <Declaration><![CDATA[PROPERTY PUBLIC P_List : I_ListSTRING]]></Declaration>
      <Get Name="Get" Id="{2c6d35e0-576a-0ff0-3193-2cb041a9eff0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_List:= fbList;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="P_Options" Id="{b002cd87-c770-09ae-1503-5331f5df2bbd}">
      <Declaration><![CDATA[{attribute 'suppress_wrn_C0410'}
PROPERTY PUBLIC P_Options : REFERENCE TO ST_TestsuitesOptions]]></Declaration>
      <Get Name="Get" Id="{6fb98d57-94a8-09a2-3c9d-c10b57979947}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Options ref= stOptions;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{ee8e5433-0cc1-0f6b-37f9-5be6303a9d11}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Options ref= stOptions;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="P_Property" Id="{919d00f3-5938-0aaa-14d2-c8a498ee4e71}">
      <Declaration><![CDATA[PROPERTY PUBLIC P_Property : I_Property]]></Declaration>
      <Get Name="Get" Id="{084f4568-883f-03e7-203d-e8e6525f6df0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Property:= fbProperty;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>